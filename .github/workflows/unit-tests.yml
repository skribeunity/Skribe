name: Build and Sync Docs (NET Framework)

on:
  push:         { branches: [main] }
  pull_request: { branches: [main] }

jobs:
  build-and-update-docs:
    runs-on: windows-latest

    steps:
      # ───── Code checkout ──────────────────────────────────────────────
      - uses: actions/checkout@v4
        name: Checkout code repository (Skribe)
      
      # ───── Toolchain setup ────────────────────────────────────────────
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.1.1

      - name: Restore NuGet packages
        run: nuget restore Skribe.sln

      - name: Setup MSBuild (VS Build Tools 2022)
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: '[17.0,18.0)'   # pin to VS 2022 channel
      
      # ───── Build ──────────────────────────────────────────────────────
      - name: Build solution (Release|AnyCPU)
        run: msbuild Skribe.sln /p:Configuration=Release /p:Platform="Any CPU"
      
      # ───── Test run ───────────────────────────────────────────────────
      - name: Install NUnit Console Runner (desktop)
        run: nuget install NUnit.ConsoleRunner -Version 3.20.0 -OutputDirectory testrunner

      - name: Locate UnitTests.dll
        id: find_test_dll
        shell: pwsh
        run: |
          $dll = Get-ChildItem -Recurse -Filter UnitTests.dll |
                 Where-Object { $_.FullName -notmatch '\\obj\\' } |
                 Select-Object -First 1
          if (-not $dll) { Write-Error "UnitTests.dll not found"; exit 1 }
          "TEST_DLL=$($dll.FullName)" | Out-File $env:GITHUB_ENV -Encoding utf8

      - name: Run NUnit tests → nunit3 XML
        shell: pwsh
        run: |
          mkdir TestResults
          testrunner\NUnit.ConsoleRunner.3.20.0\tools\nunit3-console.exe `
            "$env:TEST_DLL" `
            --result="TestResults\TestResult.xml"
      
      # ───── nunit3 ⇒ JUnit (XSLT) ──────────────────────────────────────
      - name: Download nunit3-junit XSLT
        shell: pwsh
        run: |
          Invoke-WebRequest `
            -Uri https://raw.githubusercontent.com/nunit/nunit-transforms/master/nunit3-junit/nunit3-junit.xslt `
            -OutFile nunit3-junit.xslt

      - name: Transform to JUnit XML
        shell: pwsh
        run: |
          $xslt = New-Object System.Xml.Xsl.XslCompiledTransform
          $xslt.Load("nunit3-junit.xslt")
          $xslt.Transform("TestResults\TestResult.xml", "TestResults\junit.xml")
      
      # ───── Allure report ──────────────────────────────────────────────
      - name: Install Allure CLI
        shell: pwsh
        run: choco install allure-commandline -y --no-progress

      - name: Generate Allure HTML report
        shell: pwsh
        run: |
          allure generate TestResults --clean -o AllureReport
      
      # ───── Commit log snippet (unchanged) ─────────────────────────────
      - name: Setup Node.js (for helper script)
        uses: actions/setup-node@v4
        with: { node-version: '20' }

      - name: Collect recent commits (Markdown)
        shell: bash
        run: |
          mkdir -p DocUpdates
          node ./scripts/fetch-commits.js
      
      # ───── Push artefacts to docs repo ────────────────────────────────
      - name: Checkout docs repository
        uses: actions/checkout@v4
        with:
          repository: skribeunity/skribe-docs
          path: docs_repo
          token: ${{ secrets.DOCS_DEPLOY_TOKEN }}

      - name: Copy artefacts into docs repo
        shell: bash
        run: |
          mkdir -p docs_repo/static/test-report
          cp -r AllureReport/* docs_repo/static/test-report/
          cp DocUpdates/recent-commits.md docs_repo/docs/

      - name: Commit & push docs changes
        shell: bash
        run: |
          cd docs_repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if ! git diff --staged --quiet; then
            git commit -m "Auto-update Allure test report and commit log"
            git push
          fi

name: Build and Sync Docs

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-update-docs:
    runs-on: windows-latest

    steps:
      - name: Checkout code repository (Skribe)
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'


      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.1.1

      - name: Restore NuGet packages
        run: nuget restore Skribe.sln

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Build project
        run: dotnet build --no-restore

      - name: Install NUnit Console Runner
        run: nuget install NUnit.ConsoleRunner -Version 3.20.0 -OutputDirectory testrunner

      - name: Find UnitTests.dll
        id: find_test_dll
        shell: pwsh
        run: |
          $dll = Get-ChildItem -Path . -Recurse -Filter UnitTests.dll | Select-Object -First 1
          if (-not $dll) {
            Write-Error "UnitTests.dll not found"
            exit 1
          }
          $folder = Split-Path $dll.FullName
          "TEST_DLL_FOLDER=$folder" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

      - name: Run NUnit tests and generate XML
        run: |
          mkdir TestResults
          testrunner\NUnit.ConsoleRunner.3.20.0\tools\nunit3-console.exe "$env:TEST_DLL_FOLDER\UnitTests.dll" --result=TestResults/TestResult.xml;format=nunit2
        shell: pwsh

      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Generate HTML Test Report
        run: |
          reportgenerator "-reports:TestResults/TestResult.xml" "-targetdir:TestReport" "-reporttypes:Html"
        shell: pwsh

      - name: Fetch recent commits (write to Markdown)
        run: |
          mkdir -p DocUpdates
          node ./scripts/fetch-commits.js
        shell: bash

      - name: Checkout Docs Repository
        uses: actions/checkout@v4
        with:
          repository: skribeunity/skribe-docs
          path: docs_repo
          token: ${{ secrets.DOCS_DEPLOY_TOKEN }}

      - name: Copy updates into docs repository
        run: |
          cp -r TestReport/* docs_repo/static/test-report/
          cp -r DocUpdates/recent-commits.md docs_repo/docs/

      - name: Commit and Push changes to Docs
        run: |
          cd docs_repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Auto-update test report and commits from code repo"
          git push
